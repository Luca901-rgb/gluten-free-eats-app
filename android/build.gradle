
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        minSdkVersion = 21
        compileSdkVersion = 33
        targetSdkVersion = 33
        buildToolsVersion = "33.0.2"
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
        classpath 'com.google.gms:google-services:4.4.0'
    }
}

apply from: "variables.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    
    // Configurazioni di compatibilitÃ  Java
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            project.android.compileOptions {
                sourceCompatibility JavaVersion.VERSION_17
                targetCompatibility JavaVersion.VERSION_17
            }
        }
    }
}

// Fix per Java 17 compatibility
tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

// Aggiungiamo una task superClean a livello di progetto globale
task superClean {
    doLast {
        println "Esecuzione pulizia profonda del progetto"
        // Elimina la directory build
        delete rootProject.buildDir
        
        // Pulisci anche le sottodirectory di build nei progetti
        subprojects.each { subproject ->
            delete subproject.buildDir
            
            def assetsDir = new File("${subproject.projectDir}/build/generated/assets")
            if (assetsDir.exists()) {
                println "Eliminazione directory assets generati in ${subproject.name}"
                assetsDir.deleteDir()
            }
            
            if (subproject.name == 'app') {
                def webAppDir = new File("${subproject.projectDir}/src/main/assets/public")
                if (webAppDir.exists()) {
                    println "Eliminazione directory web app in app/src/main/assets/public"
                    webAppDir.deleteDir()
                }
            }
        }
    }
}

// Fai dipendere superClean dal task clean standard
superClean.dependsOn clean

task clean(type: Delete) {
    delete rootProject.buildDir
}

